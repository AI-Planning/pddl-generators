## Grid

* Origin: Drew McDermott. Used in the AIPS-1998 competition.
* Adaptions: None.
* Description: Untyped STRIPS domain. A robot moves along a rectangular grid
  where positions can be locked. Locks can be opened with matching keys, and
  the goal is to have some of these keys at specified locations.
* Parameters:
  * -x horizontal extension of grid
  * -y vertical extension of grid
  * -t number of different key and lock types
  * -p probability, for any key, to be mentioned in the goal
  * -k number of keys vector (one 0 .. 9 entry for each type)
  * -l number of locks vector (one 0 .. 9 entry for each type)
  * -r random seed (optional)
* Generation: Randomly distribute the robot, lock and key positions over the
  grid. No two locks can be at the same location, and the robot must not start
  on a locked position. If a key is required to be mentioned in the goal, then
  generate a random goal location for it.

One current issue is that locked spots are distributed entirely randomly. It
would be more interesting if we have some kind of "rooms" scenario where is more
likely that one must traverse via some locked places.


IPC instances:

-x 5 -y 5 -t 4 -k 8 -l 8 -p ? -s 0

